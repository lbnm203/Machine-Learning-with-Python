import streamlit as st
import pandas as pd
from scipy.stats import zscore


def visualize_org_data(data):
    # st.markdown("### üìÑ T·∫≠p d·ªØ li·ªáu g·ªëc")
    # st.dataframe(data)
    # st.markdown("""
    #     ---
    #     ### üóíÔ∏è Th√¥ng tin c·ªßa t·∫≠p d·ªØ li·ªáu:
    #     - ```PassengerId```: ID c·ªßa h√†nh kh√°ch (kh√¥ng c·∫ßn thi·∫øt cho m√¥ h√¨nh).

    #     - ```Survived```: Bi·∫øn m·ª•c ti√™u (0 = Kh√¥ng s·ªëng s√≥t, 1 = S·ªëng s√≥t).

    #     - ```Pclass```: H·∫°ng v√© (1, 2, 3).

    #     - ```Name```: T√™n h√†nh kh√°ch.

    #     - ```Sex```: Gi·ªõi t√≠nh (male, female).

    #     - ```Age```: Tu·ªïi

    #     - ```SibSp```: S·ªë anh ch·ªã em ho·∫∑c v·ª£/ch·ªìng ƒëi c√πng.

    #     - ```Parch```: S·ªë cha m·∫π ho·∫∑c con c√°i ƒëi c√πng.

    #     - ```Ticket```: S·ªë v√©.

    #     - ```Fare```: Gi√° v√©

    #     - ```Cabin```: S·ªë ph√≤ng

    #     - ```Embarked```: C·∫£ng l√™n t√†u (C = Cherbourg, Q = Queenstown, S = Southampton).
    # """)

    # st.write("K√≠ch th·ª©c t·∫≠p d·ªØ li·ªáu:", data.shape)
    # st.markdown("---")
    # st.markdown("### üìä Th·ªëng k√™ t·∫≠p d·ªØ li·ªáu")
    # col1, col2 = st.columns(2)
    # with col1:
    #     st.write("##### D·ªØ li·ªáu b·ªã thi·∫øu:")
    #     missing_values = data.isnull().sum()
    #     st.write(missing_values)

    # with col2:
    #     st.write("##### S·ªë d·ªØ li·ªáu tr√πng l·∫∑p:")
    #     duplicated_data = data.duplicated().sum()
    #     st.write(duplicated_data)

    # st.write("##### Ph√¢n ph·ªëi t·∫≠p d·ªØ li·ªáu:")
    # st.write(data.describe().T)
    st.markdown("### üìÑ T·∫≠p d·ªØ li·ªáu g·ªëc")
    st.dataframe(data)
    st.markdown("""
        ---
        ### üóíÔ∏è Th√¥ng tin c·ªßa t·∫≠p d·ªØ li·ªáu:
    """)
    col1, col2 = st.columns(2)
    with col1:
        st.markdown("""
            ```PassengerId```: ID c·ªßa h√†nh kh√°ch 

            ```Survived```: Bi·∫øn m·ª•c ti√™u (0 = Kh√¥ng s·ªëng s√≥t, 1 = S·ªëng s√≥t).

            ```Pclass```: H·∫°ng v√© (1, 2, 3).

            ```Name```: T√™n h√†nh kh√°ch.

            ```Sex```: Gi·ªõi t√≠nh (male, female).

            ```Age```: Tu·ªïi
        """)

    with col2:
        st.markdown("""
            ```SibSp```: S·ªë anh ch·ªã em ho·∫∑c v·ª£/ch·ªìng ƒëi c√πng.

            ```Parch```: S·ªë cha m·∫π ho·∫∑c con c√°i ƒëi c√πng.

            ```Ticket```: S·ªë v√©.

            ```Fare```: Gi√° v√©

            ```Cabin```: S·ªë ph√≤ng

            ```Embarked```: C·∫£ng l√™n t√†u (C = Cherbourg, Q = Queenstown, S = Southampton).

        """)

    st.markdown("---")
    st.markdown("### üìä Th·ªëng k√™ t·∫≠p d·ªØ li·ªáu")
    col1, col2 = st.columns(2)
    with col1:
        st.write("##### D·ªØ li·ªáu b·ªã thi·∫øu:")
        missing_values = data.isnull().sum()
        outlier_count = {
            col: (abs(zscore(data[col], nan_policy='omit')) > 3).sum()
            for col in data.select_dtypes(include=['number']).columns
        }
        miss_table = pd.DataFrame({
            'Gi√° tr·ªã b·ªã thi·∫øu': missing_values,
            'Outlier': [outlier_count.get(col, 0) for col in data.columns]
        })
        st.table(miss_table)

    with col2:
        st.write("##### S·ªë d·ªØ li·ªáu tr√πng l·∫∑p:")
        duplicated_data = data.duplicated().sum()
        st.write(duplicated_data)

    st.write("##### Ph√¢n ph·ªëi t·∫≠p d·ªØ li·ªáu:")
    st.table(data.describe().round(2))
